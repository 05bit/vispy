variables:
  CIBW_BUILDING: "true"
  CIBW_SKIP: "cp27-* cp34-*"
  CIBW_TEST_REQUIRES: "pytest pytest-sugar nose"
  CIBW_TEST_COMMAND: "python -c \"import vispy; vispy.test()\""
  CIBW_BEFORE_BUILD_LINUX: "yum install -y fontconfig xvfb; if [ `getconf LONG_BIT` == '64' ]; then pip install https://files.pythonhosted.org/packages/f2/00/6f332e63b33d24dc3761916e6d51402a7a82dd43c6ca8a96e24dda32c6b5/freetype_py-2.1.0.post1-py2.py3-none-manylinux1_x86_64.whl; else pip install https://files.pythonhosted.org/packages/b8/ea/adfbeb3762a03c1d1c1ff751101efb1fddb7aadffa991d39bdb486d0557e/freetype_py-2.1.0.post1-py2.py3-none-manylinux1_i686.whl; fi"
jobs:
- job: linux
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        pip install cibuildwheel twine
        cibuildwheel --output-dir wheelhouse .
        python setup.py sdist -d wheelhouse
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
- job: macos
  pool: {vmImage: 'macOS-10.13'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        cibuildwheel --output-dir wheelhouse .
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
- job: windows
  pool: {vmImage: 'vs2017-win2016'}
  steps:
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.5', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.5', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
    - bash: |
        python -m pip install --upgrade pip
        cibuildwheel --output-dir wheelhouse .
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
- job: deploy
  pool: {vmImage: 'Ubuntu-16.04'}
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/*'))
  dependsOn:
    - linux
    - macos
    - windows
  steps:
    - task: UsePythonVersion@0
    - env:
        TWINE_PASSWORD: $(pypiToken)
    - bash: |
        python -m pip install --upgrade pip
        pip install twine
        twine upload -u "@token" --skip-existing wheelhouse/*
