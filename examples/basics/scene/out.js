["CURRENT", 0]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["CREATE", 12, "VertexBuffer"]
["SIZE", 12, 4800]
["DATA", 12, 0, {"buffer": "AAAAAAAAAADNzMw9AAAAAM3MzD3NzMw9AAAAAAAAAADNzMw9zczMPQAAAADNzMw9AAAAAM3MzD3NzMw9zczMPc3MzD3NzEw+AAAAAM3MzD3NzMw9zcxMPgAAAADNzEw+AAAAAM3MTD7NzMw9zcxMPs3MzD2amZk+AAAAAM3MTD7NzMw9mpmZPgAAAACamZk+AAAAAJqZmT7NzMw9mpmZPs3MzD3NzMw+AAAAAJqZmT7NzMw9zczMPgAAAADNzMw+AAAAAM3MzD7NzMw9zczMPs3MzD0AAAA/AAAAAM3MzD7NzMw9AAAAPwAAAAAAAAA/AAAAAAAAAD/NzMw9AAAAP83MzD2amRk/AAAAAAAAAD/NzMw9mpkZPwAAAACamRk/AAAAAJqZGT/NzMw9mpkZP83MzD0zMzM/AAAAAJqZGT/NzMw9MzMzPwAAAAAzMzM/AAAAADMzMz/NzMw9MzMzP83MzD3NzEw/AAAAADMzMz/NzMw9zcxMPwAAAADNzEw/AAAAAM3MTD/NzMw9zcxMP83MzD1mZmY/AAAAAM3MTD/NzMw9ZmZmPwAAAABmZmY/AAAAAGZmZj/NzMw9ZmZmP83MzD0AAIA/AAAAAGZmZj/NzMw9AACAPwAAAAAAAIA/zczMPQAAAADNzEw+AAAAAM3MTD7NzMw9zczMPQAAAADNzEw+zczMPc3MzD3NzMw9zczMPc3MzD3NzEw+zczMPc3MTD7NzEw+zczMPc3MzD3NzEw+zcxMPs3MzD3NzEw+zczMPc3MTD7NzEw+zcxMPs3MTD6amZk+zczMPc3MTD7NzEw+mpmZPs3MzD2amZk+zczMPZqZmT7NzEw+mpmZPs3MTD7NzMw+zczMPZqZmT7NzEw+zczMPs3MzD3NzMw+zczMPc3MzD7NzEw+zczMPs3MTD4AAAA/zczMPc3MzD7NzEw+AAAAP83MzD0AAAA/zczMPQAAAD/NzEw+AAAAP83MTD6amRk/zczMPQAAAD/NzEw+mpkZP83MzD2amRk/zczMPZqZGT/NzEw+mpkZP83MTD4zMzM/zczMPZqZGT/NzEw+MzMzP83MzD0zMzM/zczMPTMzMz/NzEw+MzMzP83MTD7NzEw/zczMPTMzMz/NzEw+zcxMP83MzD3NzEw/zczMPc3MTD/NzEw+zcxMP83MTD5mZmY/zczMPc3MTD/NzEw+ZmZmP83MzD1mZmY/zczMPWZmZj/NzEw+ZmZmP83MTD4AAIA/zczMPWZmZj/NzEw+AACAP83MzD0AAIA/zcxMPgAAAACamZk+AAAAAJqZmT7NzMw9zcxMPgAAAACamZk+zczMPc3MTD7NzMw9zcxMPs3MzD2amZk+zczMPZqZmT7NzEw+zcxMPs3MzD2amZk+zcxMPs3MTD7NzEw+zcxMPs3MTD6amZk+zcxMPpqZmT6amZk+zcxMPs3MTD6amZk+mpmZPs3MTD6amZk+zcxMPpqZmT6amZk+mpmZPpqZmT7NzMw+zcxMPpqZmT6amZk+zczMPs3MTD7NzMw+zcxMPs3MzD6amZk+zczMPpqZmT4AAAA/zcxMPs3MzD6amZk+AAAAP83MTD4AAAA/zcxMPgAAAD+amZk+AAAAP5qZmT6amRk/zcxMPgAAAD+amZk+mpkZP83MTD6amRk/zcxMPpqZGT+amZk+mpkZP5qZmT4zMzM/zcxMPpqZGT+amZk+MzMzP83MTD4zMzM/zcxMPjMzMz+amZk+MzMzP5qZmT7NzEw/zcxMPjMzMz+amZk+zcxMP83MTD7NzEw/zcxMPs3MTD+amZk+zcxMP5qZmT5mZmY/zcxMPs3MTD+amZk+ZmZmP83MTD5mZmY/zcxMPmZmZj+amZk+ZmZmP5qZmT4AAIA/zcxMPmZmZj+amZk+AACAP83MTD4AAIA/mpmZPgAAAADNzMw+AAAAAM3MzD7NzMw9mpmZPgAAAADNzMw+zczMPZqZmT7NzMw9mpmZPs3MzD3NzMw+zczMPc3MzD7NzEw+mpmZPs3MzD3NzMw+zcxMPpqZmT7NzEw+mpmZPs3MTD7NzMw+zcxMPs3MzD6amZk+mpmZPs3MTD7NzMw+mpmZPpqZmT6amZk+mpmZPpqZmT7NzMw+mpmZPs3MzD7NzMw+mpmZPpqZmT7NzMw+zczMPpqZmT7NzMw+mpmZPs3MzD7NzMw+zczMPs3MzD4AAAA/mpmZPs3MzD7NzMw+AAAAP5qZmT4AAAA/mpmZPgAAAD/NzMw+AAAAP83MzD6amRk/mpmZPgAAAD/NzMw+mpkZP5qZmT6amRk/mpmZPpqZGT/NzMw+mpkZP83MzD4zMzM/mpmZPpqZGT/NzMw+MzMzP5qZmT4zMzM/mpmZPjMzMz/NzMw+MzMzP83MzD7NzEw/mpmZPjMzMz/NzMw+zcxMP5qZmT7NzEw/mpmZPs3MTD/NzMw+zcxMP83MzD5mZmY/mpmZPs3MTD/NzMw+ZmZmP5qZmT5mZmY/mpmZPmZmZj/NzMw+ZmZmP83MzD4AAIA/mpmZPmZmZj/NzMw+AACAP5qZmT4AAIA/zczMPgAAAAAAAAA/AAAAAAAAAD/NzMw9zczMPgAAAAAAAAA/zczMPc3MzD7NzMw9zczMPs3MzD0AAAA/zczMPQAAAD/NzEw+zczMPs3MzD0AAAA/zcxMPs3MzD7NzEw+zczMPs3MTD4AAAA/zcxMPgAAAD+amZk+zczMPs3MTD4AAAA/mpmZPs3MzD6amZk+zczMPpqZmT4AAAA/mpmZPgAAAD/NzMw+zczMPpqZmT4AAAA/zczMPs3MzD7NzMw+zczMPs3MzD4AAAA/zczMPgAAAD8AAAA/zczMPs3MzD4AAAA/AAAAP83MzD4AAAA/zczMPgAAAD8AAAA/AAAAPwAAAD+amRk/zczMPgAAAD8AAAA/mpkZP83MzD6amRk/zczMPpqZGT8AAAA/mpkZPwAAAD8zMzM/zczMPpqZGT8AAAA/MzMzP83MzD4zMzM/zczMPjMzMz8AAAA/MzMzPwAAAD/NzEw/zczMPjMzMz8AAAA/zcxMP83MzD7NzEw/zczMPs3MTD8AAAA/zcxMPwAAAD9mZmY/zczMPs3MTD8AAAA/ZmZmP83MzD5mZmY/zczMPmZmZj8AAAA/ZmZmPwAAAD8AAIA/zczMPmZmZj8AAAA/AACAP83MzD4AAIA/AAAAPwAAAACamRk/AAAAAJqZGT/NzMw9AAAAPwAAAACamRk/zczMPQAAAD/NzMw9AAAAP83MzD2amRk/zczMPZqZGT/NzEw+AAAAP83MzD2amRk/zcxMPgAAAD/NzEw+AAAAP83MTD6amRk/zcxMPpqZGT+amZk+AAAAP83MTD6amRk/mpmZPgAAAD+amZk+AAAAP5qZmT6amRk/mpmZPpqZGT/NzMw+AAAAP5qZmT6amRk/zczMPgAAAD/NzMw+AAAAP83MzD6amRk/zczMPpqZGT8AAAA/AAAAP83MzD6amRk/AAAAPwAAAD8AAAA/AAAAPwAAAD+amRk/AAAAP5qZGT+amRk/AAAAPwAAAD+amRk/mpkZPwAAAD+amRk/AAAAP5qZGT+amRk/mpkZP5qZGT8zMzM/AAAAP5qZGT+amRk/MzMzPwAAAD8zMzM/AAAAPzMzMz+amRk/MzMzP5qZGT/NzEw/AAAAPzMzMz+amRk/zcxMPwAAAD/NzEw/AAAAP83MTD+amRk/zcxMP5qZGT9mZmY/AAAAP83MTD+amRk/ZmZmPwAAAD9mZmY/AAAAP2ZmZj+amRk/ZmZmP5qZGT8AAIA/AAAAP2ZmZj+amRk/AACAPwAAAD8AAIA/mpkZPwAAAAAzMzM/AAAAADMzMz/NzMw9mpkZPwAAAAAzMzM/zczMPZqZGT/NzMw9mpkZP83MzD0zMzM/zczMPTMzMz/NzEw+mpkZP83MzD0zMzM/zcxMPpqZGT/NzEw+mpkZP83MTD4zMzM/zcxMPjMzMz+amZk+mpkZP83MTD4zMzM/mpmZPpqZGT+amZk+mpkZP5qZmT4zMzM/mpmZPjMzMz/NzMw+mpkZP5qZmT4zMzM/zczMPpqZGT/NzMw+mpkZP83MzD4zMzM/zczMPjMzMz8AAAA/mpkZP83MzD4zMzM/AAAAP5qZGT8AAAA/mpkZPwAAAD8zMzM/AAAAPzMzMz+amRk/mpkZPwAAAD8zMzM/mpkZP5qZGT+amRk/mpkZP5qZGT8zMzM/mpkZPzMzMz8zMzM/mpkZP5qZGT8zMzM/MzMzP5qZGT8zMzM/mpkZPzMzMz8zMzM/MzMzPzMzMz/NzEw/mpkZPzMzMz8zMzM/zcxMP5qZGT/NzEw/mpkZP83MTD8zMzM/zcxMPzMzMz9mZmY/mpkZP83MTD8zMzM/ZmZmP5qZGT9mZmY/mpkZP2ZmZj8zMzM/ZmZmPzMzMz8AAIA/mpkZP2ZmZj8zMzM/AACAP5qZGT8AAIA/MzMzPwAAAADNzEw/AAAAAM3MTD/NzMw9MzMzPwAAAADNzEw/zczMPTMzMz/NzMw9MzMzP83MzD3NzEw/zczMPc3MTD/NzEw+MzMzP83MzD3NzEw/zcxMPjMzMz/NzEw+MzMzP83MTD7NzEw/zcxMPs3MTD+amZk+MzMzP83MTD7NzEw/mpmZPjMzMz+amZk+MzMzP5qZmT7NzEw/mpmZPs3MTD/NzMw+MzMzP5qZmT7NzEw/zczMPjMzMz/NzMw+MzMzP83MzD7NzEw/zczMPs3MTD8AAAA/MzMzP83MzD7NzEw/AAAAPzMzMz8AAAA/MzMzPwAAAD/NzEw/AAAAP83MTD+amRk/MzMzPwAAAD/NzEw/mpkZPzMzMz+amRk/MzMzP5qZGT/NzEw/mpkZP83MTD8zMzM/MzMzP5qZGT/NzEw/MzMzPzMzMz8zMzM/MzMzPzMzMz/NzEw/MzMzP83MTD/NzEw/MzMzPzMzMz/NzEw/zcxMPzMzMz/NzEw/MzMzP83MTD/NzEw/zcxMP83MTD9mZmY/MzMzP83MTD/NzEw/ZmZmPzMzMz9mZmY/MzMzP2ZmZj/NzEw/ZmZmP83MTD8AAIA/MzMzP2ZmZj/NzEw/AACAPzMzMz8AAIA/zcxMPwAAAABmZmY/AAAAAGZmZj/NzMw9zcxMPwAAAABmZmY/zczMPc3MTD/NzMw9zcxMP83MzD1mZmY/zczMPWZmZj/NzEw+zcxMP83MzD1mZmY/zcxMPs3MTD/NzEw+zcxMP83MTD5mZmY/zcxMPmZmZj+amZk+zcxMP83MTD5mZmY/mpmZPs3MTD+amZk+zcxMP5qZmT5mZmY/mpmZPmZmZj/NzMw+zcxMP5qZmT5mZmY/zczMPs3MTD/NzMw+zcxMP83MzD5mZmY/zczMPmZmZj8AAAA/zcxMP83MzD5mZmY/AAAAP83MTD8AAAA/zcxMPwAAAD9mZmY/AAAAP2ZmZj+amRk/zcxMPwAAAD9mZmY/mpkZP83MTD+amRk/zcxMP5qZGT9mZmY/mpkZP2ZmZj8zMzM/zcxMP5qZGT9mZmY/MzMzP83MTD8zMzM/zcxMPzMzMz9mZmY/MzMzP2ZmZj/NzEw/zcxMPzMzMz9mZmY/zcxMP83MTD/NzEw/zcxMP83MTD9mZmY/zcxMP2ZmZj9mZmY/zcxMP83MTD9mZmY/ZmZmP83MTD9mZmY/zcxMP2ZmZj9mZmY/ZmZmP2ZmZj8AAIA/zcxMP2ZmZj9mZmY/AACAP83MTD8AAIA/ZmZmPwAAAAAAAIA/AAAAAAAAgD/NzMw9ZmZmPwAAAAAAAIA/zczMPWZmZj/NzMw9ZmZmP83MzD0AAIA/zczMPQAAgD/NzEw+ZmZmP83MzD0AAIA/zcxMPmZmZj/NzEw+ZmZmP83MTD4AAIA/zcxMPgAAgD+amZk+ZmZmP83MTD4AAIA/mpmZPmZmZj+amZk+ZmZmP5qZmT4AAIA/mpmZPgAAgD/NzMw+ZmZmP5qZmT4AAIA/zczMPmZmZj/NzMw+ZmZmP83MzD4AAIA/zczMPgAAgD8AAAA/ZmZmP83MzD4AAIA/AAAAP2ZmZj8AAAA/ZmZmPwAAAD8AAIA/AAAAPwAAgD+amRk/ZmZmPwAAAD8AAIA/mpkZP2ZmZj+amRk/ZmZmP5qZGT8AAIA/mpkZPwAAgD8zMzM/ZmZmP5qZGT8AAIA/MzMzP2ZmZj8zMzM/ZmZmPzMzMz8AAIA/MzMzPwAAgD/NzEw/ZmZmPzMzMz8AAIA/zcxMP2ZmZj/NzEw/ZmZmP83MTD8AAIA/zcxMPwAAgD9mZmY/ZmZmP83MTD8AAIA/ZmZmP2ZmZj9mZmY/ZmZmP2ZmZj8AAIA/ZmZmPwAAgD8AAIA/ZmZmP2ZmZj8AAIA/AACAP2ZmZj8AAIA/", "storage_type": "base64"}]
["CREATE", 11, "VertexBuffer"]
["SIZE", 11, 7200]
["DATA", 11, 0, {"buffer": "", "storage_type": "base64"}]
["CREATE", 10, "Texture2D"]
["INTERPOLATION", 10, "nearest", "nearest"]
["WRAPPING", 10, ["clamp_to_edge", "clamp_to_edge"]]
["SIZE", 10, [100, 100, 3], "rgb", null]
["DATA", 10, [0, 0], {"buffer": "", "storage_type": "base64"}]
["INTERPOLATION", 10, "nearest", "nearest"]
["CREATE", 9, "Program"]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_3;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_2;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate_1;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4v+QowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4v+QowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4v+QowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4v8QowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4v8QowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4viQowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_3;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_2;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate_1;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4viQowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4uIQowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4uIQowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAGF1UQYwuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAGF1UQYwuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAdNGNwYwuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAdNGNwYwuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuug2wowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuug2wowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhewowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhewowuD0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwowuEUQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwowuEUQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwoyuF0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwoyuF0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwozuIUQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhiwozuIUQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhKwozuK0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAuuhKwozuK0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAdNG1wYxuNkQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_2(result_5);\n    vec4 result_7 = st_transform_map_1(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAdNG1wYxuNkQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAjC6qQYzuQEQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map_1(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAjC6qQYzuQEQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAARhdpQowuR0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_3;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_2;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate_1;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAARhdpQowuR0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4u2QowuS0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAAo4u2QowuS0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UUFQ4zuTUQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UUFQ4zuTUQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UUgQ4xuTkQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UUgQ4xuTkQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UU0Q4yuTUQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UU0Q4yuTUQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UVCQ4wuSUQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UVCQ4wuSUQAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UVFQ4wuR0QAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
["CURRENT", 0]
["SHADERS", 9, "#version 120\n#line 2\n\nattribute vec3 a_xyz_pos;\n\nvec4 input_xyz_pos() {\n    return vec4(a_xyz_pos, 1.0);\n}\n\n\nvec4 local_position() {\n    vec4 result_1 = input_xyz_pos();\n    return result_1;\n}\n\nattribute vec2 a_tex_coord;\nvarying vec2 v_tex_coord;\n\nvoid texture_coord_support() {\n    v_tex_coord = a_tex_coord;\n}\n\n\nvoid vert_post_hook() {\n    texture_coord_support();\n}\n\nvec4 null_transform_map_1(vec4 pos) {return pos;}\n\nuniform mat4 u_matrix;\n\nvec4 affine_transform_map(vec4 pos) {\n    return u_matrix * pos;\n}\n\n\nuniform vec4 u_scale_3;\nuniform vec4 u_translate_3;\n\nvec4 st_transform_map(vec4 pos) {\n    return (pos * u_scale_3) + u_translate_3;\n}\n\n\nuniform vec4 u_scale_1;\nuniform vec4 u_translate_2;\n\nvec4 st_transform_map_3(vec4 pos) {\n    return (pos * u_scale_1) + u_translate_2;\n}\n\n\nvec4 null_transform_map(vec4 pos) {return pos;}\n\nuniform vec4 u_scale_2;\nuniform vec4 u_translate_1;\n\nvec4 st_transform_map_1(vec4 pos) {\n    return (pos * u_scale_2) + u_translate_1;\n}\n\n\nuniform vec4 u_scale;\nuniform vec4 u_translate;\n\nvec4 st_transform_map_2(vec4 pos) {\n    return (pos * u_scale) + u_translate;\n}\n\n\nvec4 null_transform_map_2(vec4 pos) {return pos;}\n\nvec4 transform_map_chain(vec4 pos) {\n    vec4 result_1 = null_transform_map_1(pos);\n    vec4 result_2 = affine_transform_map(result_1);\n    vec4 result_3 = st_transform_map(result_2);\n    vec4 result_4 = st_transform_map_3(result_3);\n    vec4 result_5 = null_transform_map(result_4);\n    vec4 result_6 = st_transform_map_1(result_5);\n    vec4 result_7 = st_transform_map_2(result_6);\n    vec4 result_8 = null_transform_map_2(result_7);\n    return result_8;\n}\n\n vec4 local_pos;\n\nvoid main(void) {\n    local_pos = local_position();\n    vec4 nd_pos = transform_map_chain(local_pos);\n    gl_Position = nd_pos;\n\n    vert_post_hook();\n}\n", "#version 120\n#line 2\n\nvarying vec2 v_tex_coord;\n\nvec2 tex_coord_1() {\n    return v_tex_coord;\n}\n\n\nuniform sampler2D u_texture;\n\nvec4 texture_read() {\n    vec2 tex_coord = tex_coord_1();\n    if(tex_coord.x < 0.0 || tex_coord.x > 1.0 ||\n    tex_coord.y < 0.0 || tex_coord.y > 1.0) {\n        discard;\n    }\n    return texture2D(u_texture, tex_coord.xy);\n}\n\n\nvec4 frag_color() {\n    vec4 result_1 = texture_read();\n    return result_1;\n}\n\n\n// Fragment shader consists of only a single hook that is usually defined\n// by a chain of functions, each which sets or modifies the curren\n// fragment color, or discards it.\nvoid main(void) {\n    gl_FragColor = frag_color();\n}\n"]
["TEXTURE", 9, "u_texture", 10]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_2", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_3", "vec4", {"buffer": "AAAAAAAAAAAAAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate_1", "vec4", {"buffer": "AAAAAAAAFkQAAAAAAAAAAA==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UVFQ4wuR0QAAAAAAACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_2", "vec4", {"buffer": "AACAPwAAgL8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_3", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale_1", "vec4", {"buffer": "AACAPwAAgD8AAIA/AACAPw==", "storage_type": "base64"}]
["ATTRIBUTE", 9, "a_xyz_pos", "vec3", [11, 12, 0]]
["ATTRIBUTE", 9, "a_tex_coord", "vec2", [12, 8, 0]]
["UNIFORM", 9, "u_matrix", "mat4", {"buffer": "o4uuQAAAAAAAAAAAAAAAAAAAAACji67AAAAAAAAAAAAAAAAAAAAAAKzFJzcAAAAA0UVJQ4zuREQAAAAAAACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_scale", "vec4", {"buffer": "CtcjOw50WjsAAIA/AACAPw==", "storage_type": "base64"}]
["UNIFORM", 9, "u_translate", "vec4", {"buffer": "AACAvwAAgL8AAAAAAAAAAA==", "storage_type": "base64"}]
["TEXTURE", 9, "u_texture", 10]
["FUNC", "glClearColor", 0.0, 0.0, 0.0, 1.0]
["FUNC", "glClear", 17664]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glViewport", 0, 0, 800, 600]
["FUNC", "glCullFace", "front_and_back"]
["FUNC", "glEnable", "depth_test"]
["FUNC", "glBlendFuncSeparate", "src_alpha", "one_minus_src_alpha", "src_alpha", "one_minus_src_alpha"]
["FUNC", "glEnable", "blend"]
["DRAW", 9, "triangles", [0, 600]]
["FUNC", "glViewport", 0, 0, 800, 600]
